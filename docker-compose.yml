version: '3'
services:
  collectd-installer:
    build: ./../collectd-installer
    container_name: collectd-installer
    environment:
      - USER=$USER
      - PASS=$PASS
      - OS=$OS
      - MODE=$MODE
    network_mode: host
  model-repository:
    build: ./../model-repository
    container_name: model-repository
    ports:
      - 5000:5000
      - "50021:21"
    networks:
      - net
    volumes:
      - models:/mlflow
    extra_hosts:
      - model-repository:127.0.0.1
  smart-optimizer:
    build: ./../smart-optimizer
    container_name: smart-optimizer
    environment:
      - MODE=$MODE
    networks:
      - net
  collectd-exporter:
    build: ./../collectd-exporter
    container_name: collectd-exporter
    ports:
      - 9103:9103
    networks:
      - net
  smart-predictor:
    build: ./../smart-predictor
    container_name: smart-predictor
    ports:
      - 9106:9106
    networks:
      - net
  # baidu-failure-exporter:
  #   build: ./../data-exporter/baidu-failure
  #   container_name: baidu-failure-exporter
  #   networks:
  #     - net
  # baidu-good-exporter:
  #   build: ./../data-exporter/baidu-good
  #   container_name: baidu-good-exporter
  #   networks:
  #     - net
  # minji-exporter:
  #   build: ./../data-exporter/minji
  #   container_name: minji-exporter
  #   networks:
  #     - net
  # backblaze-exporter:
  #   build: ./../data-exporter/backblaze
  #   container_name: backblaze-exporter
  #   networks:
  #     - net
  # jihyun-exporter:
  #   build: ./../data-exporter/jihyun
  #   container_name: jihyun-exporter
  #   networks:
  #     - net
  inye-exporter:
    build: ./../data-exporter/inye
    container_name: inye-exporter
    networks:
      - net
  # failure-exporter:
  #   build: ./../data-exporter/failure
  #   container_name: failure-exporter
  #   networks:
  #     - net
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    networks:
      - net
    volumes:
      - ./prometheus:/etc/prometheus
      - tsdb:/prometheus
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    networks:
      - net
    volumes:
    - dashboard:/var/lib/grafana
    - ./grafana/provisioning:/etc/grafana/provisioning
    - /home/ampm/grafana/samples:/var/lib/grafana/dashboards
networks:
  net:
volumes:
  tsdb:
    external: false
  models:
    external: false
  dashboard:
    external: false